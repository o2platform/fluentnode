// Generated by CoffeeScript 1.12.7
(function() {
  var expect;

  require('../../src/fluentnode');

  expect = require('chai').expect;

  describe('| node-native | console', function() {
    var log_Messages, original_log;
    original_log = null;
    log_Messages = null;
    beforeEach(function() {
      original_log = console.log;
      log_Messages = [];
      return console.log = function(logMsg) {
        return log_Messages.push(logMsg);
      };
    });
    afterEach(function() {
      return console.log = original_log;
    });
    it('console_log', function() {
      var returnValue;
      expect("".console_log).to.be.an('Function');
      console.log('direct log msg');
      returnValue = 'msg using extension method'.console_log();
      expect(log_Messages).to.deep.equal(['direct log msg', 'msg using extension method']);
      return expect(returnValue).to.equal('msg using extension method');
    });
    it('Number.log', function() {
      expect(10..log).to.be.an('Function');
      10..log();
      return expect(log_Messages).to.deep.equal(["10"]);
    });
    it('{string}.log', function() {
      expect("".log).to.be.an('Function');
      "log using .log()".log();
      return expect(log_Messages).to.deep.equal(["log using .log()"]);
    });
    return it('{array}.log', function() {
      var target;
      expect([].log).to.be.an('Function');
      target = ['1', '3', 5, 'abc'];
      target.log().assert_Is(target);
      return log_Messages.assert_Is(['1,3,5,abc']);
    });
  });

}).call(this);
