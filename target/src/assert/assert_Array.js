// Generated by CoffeeScript 1.12.7
(function() {
  var assert;

  assert = require('assert');

  Array.prototype.assert_Is_Array = function(message) {
    message = message || "[assert_Is_Array]";
    (typeof this.length).assert_Is_Equal_To('number');
    assert.equal(typeof this, 'object', message);
    return this;
  };

  Array.prototype.assert_Contains = function(value) {
    var i, item, len;
    if (value instanceof Array) {
      for (i = 0, len = value.length; i < len; i++) {
        item = value[i];
        this.contains(item).assert_Is_True(item + " not found in array: " + this);
      }
    } else {
      this.contains(value).assert_Is_True(value + " not found in array: " + this);
    }
    return this;
  };

  Array.prototype.assert_Empty = function(value, message) {
    message = message || "[assert_Empty]";
    this.assert_Size_Is(0, message);
    return this;
  };

  Array.prototype.assert_Not_Contains = function(value, message) {
    message = message || "[assert_Contains]";
    this.not_Contains(value).assert_Is_True(message);
    return this;
  };

  Array.prototype.assert_Not_Empty = function(value, message) {
    message = message || "[assert_Not_Empty]";
    this.assert_Size_Is_Not(0, message);
    return this;
  };

  Array.prototype.assert_Size_Is = function(size, message) {
    message = message || ("[assert_Size_Is] expected " + this.length + " and it was " + size);
    assert.equal(this.length, size, message);
    return this;
  };

  Array.prototype.assert_Size_Is_Bigger_Than = function(size, message) {
    message = message || ("[assert_Size_Is_Bigger_Than] expected bigger than " + size + ", but it was " + this.length + " ");
    (this.length > size).assert_Is_True(message);
    return this;
  };

  Array.prototype.assert_Size_Is_Greater_Than = Array.prototype.assert_Size_Is_Bigger_Than;

  Array.prototype.assert_Size_Is_Above = Array.prototype.assert_Size_Is_Bigger_Than;

  Array.prototype.assert_Is_Greater_Than = Array.prototype.assert_Size_Is_Bigger_Than;

  Array.prototype.assert_Is_Bigger_Than = Array.prototype.assert_Size_Is_Bigger_Than;

  Array.prototype.assert_Greater_Than = Array.prototype.assert_Size_Is_Bigger_Than;

  Array.prototype.assert_Bigger_Than = Array.prototype.assert_Size_Is_Bigger_Than;

  Array.prototype.assert_Size_Is_Not = function(size, message) {
    message = message || "[assert_Size_Is_Not]";
    assert.notEqual(this.length, size, message);
    return this;
  };

}).call(this);
